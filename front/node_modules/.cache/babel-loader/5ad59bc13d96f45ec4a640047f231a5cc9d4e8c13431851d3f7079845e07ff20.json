{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/socket/react-pong/src/components/PongGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './PongGame.css';\nimport Area from './utils/Area';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PongGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const ball = {\n    x: 0,\n    y: 0,\n    radius: 10\n  }; // Coordonnées de la balle et son rayon\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const area = new Area(canvas.width, canvas.height, 1, 2);\n\n    // Fonction de dessin\n    const draw = () => {\n      // Effacer le contenu du canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dessiner une ligne noire autour du canvas pour la bordure\n      ctx.strokeStyle = 'black';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(0, 0, canvas.width, canvas.height);\n\n      // Dessiner le milieu du terrain (ligne au milieu)\n      ctx.beginPath();\n      ctx.moveTo(canvas.width / 2, 0);\n      ctx.lineTo(canvas.width / 2, canvas.height);\n      ctx.stroke();\n      const player = area.getPlayer();\n      const opponent = area.getOpponent();\n      const ballEntity = area.getBall();\n      const racketSize = area.racketSize();\n      const ballSize = area.ballSize();\n\n      // Log des valeurs de la raquette du joueur\n      console.log('Player Y:', player.getLocation().getY());\n      console.log('Racket Width:', racketSize.width);\n      console.log('Racket Height:', racketSize.height);\n\n      // Log des valeurs de la raquette de l'opposant\n      console.log('Opponent Y:', opponent.getLocation().getY());\n\n      // Log des valeurs de la balle\n      console.log('Ball Y:', ballEntity.getLocation().getY());\n      console.log('Ball Width:', ballSize.width);\n\n      // Dessiner les raquettes et la balle en utilisant les données de Area\n      ctx.fillRect(player.getLocation().getX(), player.getLocation().getY(), racketSize.width, racketSize.height);\n      ctx.fillRect(opponent.getLocation().getX(), opponent.getLocation().getY(), racketSize.width, racketSize.height);\n      ctx.beginPath();\n      ctx.arc(ballEntity.getLocation().getX(), ballEntity.getLocation().getY(), ballSize.width / 2, 0, Math.PI * 2);\n      ctx.fillStyle = 'black'; // Couleur de la balle\n      ctx.fill();\n    };\n\n    // Appeler la fonction de dessin\n    draw();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: \"Nom 1------0 - 2-----Nom 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(PongGame, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = PongGame;\nexport default PongGame;\nvar _c;\n$RefreshReg$(_c, \"PongGame\");","map":{"version":3,"names":["React","useEffect","useRef","Area","jsxDEV","_jsxDEV","PongGame","_s","canvasRef","ball","x","y","radius","canvas","current","ctx","getContext","area","width","height","draw","clearRect","strokeStyle","lineWidth","strokeRect","beginPath","moveTo","lineTo","stroke","player","getPlayer","opponent","getOpponent","ballEntity","getBall","racketSize","ballSize","console","log","getLocation","getY","fillRect","getX","arc","Math","PI","fillStyle","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/stan/Desktop/socket/react-pong/src/components/PongGame.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './PongGame.css';\nimport Area from './utils/Area';\n\nconst PongGame: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const ball = { x: 0, y: 0, radius: 10 }; // Coordonnées de la balle et son rayon\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n    const area = new Area(canvas.width, canvas.height, 1, 2);\n\n    // Fonction de dessin\n    const draw = () => {\n      \n      // Effacer le contenu du canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dessiner une ligne noire autour du canvas pour la bordure\n      ctx.strokeStyle = 'black';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(0, 0, canvas.width, canvas.height);\n\n      // Dessiner le milieu du terrain (ligne au milieu)\n      ctx.beginPath();\n      ctx.moveTo(canvas.width / 2, 0);\n      ctx.lineTo(canvas.width / 2, canvas.height);\n      ctx.stroke();\n\n      const player = area.getPlayer();\n      const opponent = area.getOpponent();\n      const ballEntity = area.getBall();\n      const racketSize = area.racketSize();\n      const ballSize = area.ballSize();\n\n\n      // Log des valeurs de la raquette du joueur\n      console.log('Player Y:', player.getLocation().getY());\n      console.log('Racket Width:', racketSize.width);\n      console.log('Racket Height:', racketSize.height);\n      \n      // Log des valeurs de la raquette de l'opposant\n      console.log('Opponent Y:', opponent.getLocation().getY());\n      \n      // Log des valeurs de la balle\n      console.log('Ball Y:', ballEntity.getLocation().getY());\n      console.log('Ball Width:', ballSize.width);\n\n      // Dessiner les raquettes et la balle en utilisant les données de Area\n      ctx.fillRect(player.getLocation().getX(), player.getLocation().getY(), racketSize.width, racketSize.height);\n      ctx.fillRect(opponent.getLocation().getX(), opponent.getLocation().getY(), racketSize.width, racketSize.height);\n      ctx.beginPath();\n      ctx.arc(ballEntity.getLocation().getX(), ballEntity.getLocation().getY(), ballSize.width / 2, 0, Math.PI * 2);\n      ctx.fillStyle = 'black'; // Couleur de la balle\n      ctx.fill();\n    };\n\n    // Appeler la fonction de dessin\n    draw();\n  }, []);\n\n  return (\n    <div className=\"centered-container\">\n      <div className=\"score\">\n        Nom 1------0 - 2-----Nom 2\n      </div>\n      <canvas ref={canvasRef} width={800} height={400} />\n    </div>\n  );\n};\n\nexport default PongGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}